name: ci
on: [ push, pull_request ]
permissions:
  checks: write
  contents: write
jobs:
  ci:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: test
        run: |
          chmod 0600 $GITHUB_WORKSPACE/vendor/vendor-apple/base/src/test/resources/fixtures/derived-data-manager/test_rsa
          ./gradlew clean test jacocoTestReport integrationTest
          bash <(curl -s https://codecov.io/bash)
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: always()
        with:
          report_paths: '**/build/test-results/*/TEST-*.xml'
      - name: detekt
        run: |
          ./gradlew clean detektCheck || true
  cd-release:
    runs-on: ubuntu-22.04
    needs: ci
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - uses: little-core-labs/get-git-tag@v3.0.2
        id: tag
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
      - name: deliver maven
        run: |
          bash .buildsystem/deploy-sonatype.sh
        env:
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          BUGSNAG_TOKEN: ${{ secrets.BUGSNAG_TOKEN }}
      - name: assemble cli
        run: |
          ./gradlew :cli:assembleDist -PreleaseMode=RELEASE
          rm -f cli/build/distributions/marathon-*-SNAPSHOT.zip || true
        env:
          BUGSNAG_TOKEN: ${{ secrets.BUGSNAG_TOKEN }}
      - name: deliver cli
        uses: softprops/action-gh-release@v1
        with:
          files: cli/build/distributions/marathon-*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v4
        with:
          repository: 'Malinskiy/homebrew-tap'
          ref: 'master'
          path: 'homebrew-tap'
          token: ${{ secrets.HOMEBREW_TAP_GITHUB_TOKEN }}
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3
      - name: deliver homebrew formulae
        run: |
          gem install liquid-cli
          URL="https://github.com/MarathonLabs/marathon/releases/download/${{ steps.tag.outputs.tag }}/marathon-${{ steps.tag.outputs.tag }}.zip"
          SHA256=$(curl -L --retry 5 --retry-max-time 120 $URL | sha256sum | sed 's/  -//')
          echo "{\"version\":\"${{ steps.tag.outputs.tag }}\",\"sha256\":\"$SHA256\"}" > .github/marathon.json
          cat .github/marathon.json | jq .
          cat .github/marathon.rb.liquid | liquid "$(< .github/marathon.json)" > homebrew-tap/Formula/marathon.rb
          cd homebrew-tap
          git config --global user.name 'Anton Malinskiy'
          git config --global user.email 'malinskiy@users.noreply.github.com'
          git commit -am "Brew formula update for marathon version ${{ steps.tag.outputs.tag }}"
          git push

  notify:
    needs: cd-release
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: little-core-labs/get-git-tag@v3.0.2
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
      - name: Set output
        run: echo "version=$GIT_TAG_NAME" >> $GITHUB_OUTPUT
      - name: Send Telegram Release message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            New Marathon version ${{ steps.notify.outputs.version }} has been submitted to Maven central and will be available soon https://github.com/MarathonLabs/marathon/releases/

